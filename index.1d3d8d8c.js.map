{"mappings":"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","sources":["src/main.ts"],"sourcesContent":["const UPLOAD_STAGE = \"upload-stage\";\nconst LOADING_STAGE = \"loading-stage\";\nconst VIDEO_STAGE = \"video-stage\";\nconst THUMBNAIL_STAGE = \"thumbnail-stage\";\n\nconst DROP_ZONE = \"upload-drop-zone\";\nconst FILE_INPUT = \"upload-file-input\";\n\nconst VIDEO = \"video\";\nconst FILE_NAME = \"loading-filename\";\nconst LOADING_PROGRESS = \"loading-progress\";\nconst BACK_UPLOAD = \"back-to-upload-button\";\nconst VIDEO_SCRUBBER = \"video-time-range\";\nconst VIDEO_TIME = \"video-time-input\";\nconst VIDEO_DURATION = \"video-duration-output\";\nconst GENERATE_BUTTON = \"generate-thumbnail\";\nconst THUMBNAIL_IMAGE = \"thumbnail-image\";\nconst THUMBNAIL_DOWNLOAD = \"thumbnail-download-link\";\nconst RESTART_BUTTON = \"thumbnail-new-button\";\nconst BACK_VIDEO = \"back-to-video-button\";\nconst UPLOAD_FORM = \"upload-form\";\n\nconst fileDropZone = <HTMLLabelElement>document.getElementById(DROP_ZONE);\nconst fileUploadInput = <HTMLInputElement>document.getElementById(FILE_INPUT);\nconst fileNameOutput = <HTMLOutputElement>document.getElementById(FILE_NAME);\nconst videoPlayer = <HTMLVideoElement>document.getElementById(VIDEO);\nconst toUpload = <HTMLButtonElement>document.getElementById(BACK_UPLOAD);\nconst videoRange = <HTMLInputElement>document.getElementById(VIDEO_SCRUBBER);\nconst videoTime = <HTMLInputElement>document.getElementById(VIDEO_TIME);\nconst videoDur = <HTMLOutputElement>document.getElementById(VIDEO_DURATION);\nconst loading = <HTMLProgressElement>document.getElementById(LOADING_PROGRESS);\nconst generate = <HTMLButtonElement>document.getElementById(GENERATE_BUTTON);\nconst thumbnail = <HTMLImageElement>document.getElementById(THUMBNAIL_IMAGE);\nconst download = <HTMLAnchorElement>document.getElementById(THUMBNAIL_DOWNLOAD);\nconst toVideo = <HTMLButtonElement>document.getElementById(BACK_VIDEO);\nconst restart = <HTMLButtonElement>document.getElementById(RESTART_BUTTON);\nconst uploadForm = <HTMLFormElement>document.getElementById(UPLOAD_FORM);\nconst canvas = document.createElement(\"canvas\");\nconst ctx = canvas.getContext(\"2d\", {\n  alpha: false,\n  desynchronized: true,\n  colorSpace: \"srgb\",\n  willReadFrequently: true,\n})!;\n\nconst stages = {\n  upload: document.getElementById(UPLOAD_STAGE)!,\n  loading: document.getElementById(LOADING_STAGE)!,\n  video: document.getElementById(VIDEO_STAGE)!,\n  thumbnail: document.getElementById(THUMBNAIL_STAGE)!,\n};\nconst stage = {\n  close() {\n    for (const element of Object.values<HTMLElement>(stages)) {\n      element.hidden = true;\n    }\n  },\n  show(name: Stage) {\n    this.close();\n    stages[name].hidden = false;\n  },\n  tansition(from: Stage, to: Stage) {\n    if (stages[from].hidden) return;\n    stages[from].hidden = true;\n    stages[to].hidden = false;\n  },\n};\n\ntype Stage = keyof typeof stages;\n\nstage.show(\"upload\");\n\nfileDropZone.addEventListener(\"dragover\", (e) => {\n  e.preventDefault();\n  fileDropZone.classList.add(\"drag-over\");\n});\n\nfileDropZone.addEventListener(\"dragleave\", (e) => {\n  e.preventDefault();\n  fileDropZone.classList.remove(\"drag-over\");\n});\n\nfileDropZone.addEventListener(\"drop\", (e) => {\n  e.preventDefault();\n  fileDropZone.classList.remove(\"drag-over\");\n  const file = e.dataTransfer?.files[0];\n  if (!file) return;\n  onFileSelected(file);\n});\n\nfileUploadInput.addEventListener(\"change\", (e) => {\n  const file = fileUploadInput.files?.[0];\n\n  fileUploadInput.value = \"\";\n  fileUploadInput.blur();\n  if (!file) return;\n  onFileSelected(file);\n});\n\ndocument.addEventListener(\"paste\", (e) => {\n  const file = e.clipboardData?.files?.[0];\n  if (!file || file.type.startsWith(\"video/\")) return;\n  onFileSelected(file);\n});\n\nfunction goBackToUpload() {\n  videoPlayer.srcObject = null;\n  uploadForm.reset();\n  stage.show(\"upload\");\n}\n\nfunction onFileSelected(file: File) {\n  fileNameOutput.value = file.name;\n  videoPlayer.src = URL.createObjectURL(file);\n  loading.value = 0;\n  videoRange.value = \"0\";\n  videoTime.value = \"00:00\";\n  download.download = removeExt(file.name);\n  stage.show(\"loading\");\n}\n\nfunction onVideoProgress() {\n  const end = videoPlayer.buffered.end(0);\n  loading.value = (end / videoPlayer.duration) * 100;\n}\n\nvideoPlayer.addEventListener(\"loadedmetadata\", () => {\n  videoPlayer.addEventListener(\"progress\", onVideoProgress);\n  videoDur.value = getDurationString(videoPlayer.duration);\n});\n\nfunction getDurationString(duration: number) {\n  duration = Math.ceil(duration);\n  const seconds = duration % 60;\n  const minutes = Math.floor(duration / 60);\n  const ss = pad(seconds);\n  const mm = pad(minutes);\n  return `${mm}:${ss}`;\n}\n\nvideoPlayer.addEventListener(\"canplaythrough\", () => {\n  videoPlayer.removeEventListener(\"progress\", onVideoProgress);\n  stage.tansition(\"loading\", \"video\");\n  videoPlayer.loop = true;\n});\n\ntoUpload.addEventListener(\"click\", goBackToUpload);\ntoVideo.addEventListener(\"click\", () => stage.show(\"video\"));\nrestart.addEventListener(\"click\", goBackToUpload);\n\nvideoPlayer.addEventListener(\"timeupdate\", () => {\n  updateTimeRange();\n  updateTimeInput();\n});\n\nfunction pad(seconds: number) {\n  return seconds.toString().padStart(2, \"0\");\n}\n\nfunction onVideoTimeChange() {\n  videoPlayer.pause();\n  const value = videoRange.valueAsNumber;\n  const percent = value / 100;\n  videoPlayer.currentTime = videoPlayer.duration * percent;\n  updateTimeInput();\n}\n\nfunction updateTimeInput() {\n  videoTime.value = getDurationString(videoPlayer.currentTime);\n}\n\nfunction updateTimeRange() {\n  const progress = videoPlayer.currentTime / videoPlayer.duration;\n  videoRange.value = `${progress * 100}`;\n}\n\nconst trottledOnVideoTimeChange = trottle(onVideoTimeChange, 5);\n\nfunction onVideoTimeMouseMove() {\n  if (document.activeElement !== videoRange) return;\n  trottledOnVideoTimeChange();\n}\n\nfunction onVideoTimeSelect() {\n  selectVideoTime();\n}\n\nfunction selectVideoTimeSide(selectMinutes: boolean) {\n  const value = videoTime.value;\n  const start = 0;\n  const colon = value.indexOf(\":\");\n  const end = value.length;\n  if (selectMinutes) {\n    videoTime.setSelectionRange(start, colon);\n  } else {\n    videoTime.setSelectionRange(colon + 1, end);\n  }\n}\n\nfunction selectVideoTime() {\n  const value = videoTime.value;\n  const colon = value.indexOf(\":\") + 1;\n  const selStart = videoTime.selectionStart;\n  selectVideoTimeSide(selStart === null || selStart < colon);\n}\n\nfunction clampVideoTime() {\n  const selStart = videoTime.selectionStart;\n  const selEnd = videoTime.selectionEnd;\n  const [mm, ss] = videoTime.value.split(\":\").map(parseFloat);\n  const seconds = mm * 60 + ss;\n  const duration = videoPlayer.duration;\n  const clamped = clamp(0, duration, seconds);\n  videoTime.value = getDurationString(clamped);\n  videoTime.setSelectionRange(selStart, selEnd);\n}\n\nfunction clamp(min, max, value) {\n  return Math.min(Math.max(value, min), max);\n}\n\nfunction removeExt(filname) {\n  return filname.replace(/\\.[^/.]+$/, \"\");\n}\n\nfunction fixVideoTime() {\n  const isValid = /^\\d{0,3}:\\d{0,2}$/.test(videoTime.value);\n\n  if (isValid) return clampVideoTime();\n\n  const selStart = videoTime.selectionStart;\n  const selEnd = videoTime.selectionEnd;\n\n  const isValidStart = /^\\d{0,3}:[^:]*$/.test(videoTime.value);\n  const isValidEnd = /^[^:]*:\\d{0,2}$/.test(videoTime.value);\n\n  const value = videoTime.value;\n  const [mm, ss] = getDurationString(videoPlayer.currentTime).split(\":\");\n\n  const start = isValidStart ? value.split(\":\")[0] : mm;\n  const end = isValidEnd ? value.split(\":\")[1] : ss;\n\n  videoTime.value = `${start}:${end}`;\n\n  videoTime.setSelectionRange(selStart, selEnd);\n\n  clampVideoTime();\n}\n\nfunction selectVideoTimeDone() {\n  const isDone = /^\\d{2,}:\\d{2}$/.test(videoTime.value);\n  if (!isDone) return;\n  selectVideoTime();\n}\n\nvideoRange.addEventListener(\"mousemove\", onVideoTimeMouseMove);\nvideoTime.addEventListener(\"select\", onVideoTimeSelect);\nvideoTime.addEventListener(\"focus\", onVideoTimeSelect);\nvideoTime.addEventListener(\"click\", onVideoTimeSelect);\nvideoTime.addEventListener(\"blur\", fixVideoTime);\nvideoTime.addEventListener(\"keypress\", (e) => {\n  if (!numbers.includes(e.key)) return;\n  e.preventDefault();\n  fixVideoTime();\n});\n\nconst numbers = \"0123456789\".split(\"\");\nconst arrows = [\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"];\n\nvideoTime.addEventListener(\"keydown\", (e) => {\n  if (!arrows.includes(e.key)) return;\n  e.preventDefault();\n\n  const selStart = videoTime.selectionStart;\n\n  const value = videoTime.value;\n\n  const colon = value.indexOf(\":\");\n  const minutesSelected = selStart === null || selStart < colon;\n\n  const [mm, ss] = value.split(\":\").map(parseFloat);\n  const [mmMax, ssMax] = getDurationString(videoPlayer.duration)\n    .split(\":\")\n    .map(parseFloat);\n\n  switch (e.key) {\n    case \"ArrowLeft\":\n      selectVideoTimeSide(true);\n      break;\n    case \"ArrowRight\":\n      selectVideoTimeSide(false);\n      break;\n    case \"ArrowUp\":\n      if (minutesSelected) {\n        if (mm === mmMax) return;\n        videoTime.value = `${pad(mm + 1)}:${pad(ss)}`;\n        selectVideoTimeSide(true);\n      } else {\n        if (ss === 59) {\n          videoTime.value = `${pad(mm + 1)}:00`;\n        } else {\n          if (mm === mmMax && ss === ssMax) return;\n          videoTime.value = `${pad(mm)}:${pad(ss + 1)}`;\n        }\n        selectVideoTimeSide(false);\n      }\n      break;\n    case \"ArrowDown\":\n      if (minutesSelected) {\n        if (mm === 0) return;\n        videoTime.value = `${pad(mm - 1)}:${pad(ss)}`;\n        selectVideoTimeSide(true);\n      } else {\n        if (ss === 0) {\n          if (mm === 0) return;\n          videoTime.value = `${pad(mm - 1)}:59`;\n        } else {\n          videoTime.value = `${pad(mm)}:${pad(ss - 1)}`;\n        }\n        selectVideoTimeSide(false);\n      }\n      break;\n  }\n\n  trottledOnVideoTimeInputChange();\n});\n\nfunction onVideoTimeInputChange() {\n  const value = videoTime.value;\n  const [mm, ss] = value.split(\":\").map(parseFloat);\n  const seconds = mm * 60 + ss;\n  const duration = videoPlayer.duration;\n  const clamped = clamp(0, duration, seconds);\n  videoPlayer.currentTime = clamped;\n}\n\nconst trottledOnVideoTimeInputChange = trottle(onVideoTimeInputChange, 5);\n\nfunction trottle(fn: () => void, ms: number) {\n  let timeout: number;\n  return () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(fn, ms);\n  };\n}\n\nfunction onGenerateClick() {\n  canvas.width = videoPlayer.videoWidth;\n  canvas.height = videoPlayer.videoHeight;\n  ctx.drawImage(videoPlayer, 0, 0);\n  canvas.toBlob(onThumbnailGenerated);\n}\n\nfunction onThumbnailGenerated(blob: Blob | null) {\n  if (!blob) return;\n\n  const url = URL.createObjectURL(blob);\n  thumbnail.src = url;\n  download.href = url;\n\n  stage.show(\"thumbnail\");\n}\n\ngenerate.addEventListener(\"click\", onGenerateClick);\n"],"names":["$ad2bcec7a0192558$var$fileDropZone","document","getElementById","$ad2bcec7a0192558$var$fileUploadInput","$ad2bcec7a0192558$var$fileNameOutput","$ad2bcec7a0192558$var$videoPlayer","$ad2bcec7a0192558$var$toUpload","$ad2bcec7a0192558$var$videoRange","$ad2bcec7a0192558$var$videoTime","$ad2bcec7a0192558$var$videoDur","$ad2bcec7a0192558$var$loading","$ad2bcec7a0192558$var$generate","$ad2bcec7a0192558$var$thumbnail","$ad2bcec7a0192558$var$download","$ad2bcec7a0192558$var$toVideo","$ad2bcec7a0192558$var$restart","$ad2bcec7a0192558$var$uploadForm","$ad2bcec7a0192558$var$canvas","createElement","$ad2bcec7a0192558$var$ctx","getContext","alpha","desynchronized","colorSpace","willReadFrequently","$ad2bcec7a0192558$var$stages","upload","loading","video","thumbnail","$ad2bcec7a0192558$var$stage","close","element","Object","values","hidden","show","name","this","tansition","from","to","$ad2bcec7a0192558$var$goBackToUpload","srcObject","reset","$ad2bcec7a0192558$var$onFileSelected","file","value","src","URL","createObjectURL","download","replace","$ad2bcec7a0192558$var$onVideoProgress","end","buffered","duration","$ad2bcec7a0192558$var$getDurationString","seconds","Math","ceil","minutes","floor","ss","$ad2bcec7a0192558$var$pad","toString","padStart","$ad2bcec7a0192558$var$updateTimeInput","currentTime","addEventListener","e","preventDefault","classList","add","remove","dataTransfer","files","blur","clipboardData","type","startsWith","removeEventListener","loop","progress","$ad2bcec7a0192558$var$updateTimeRange","$ad2bcec7a0192558$var$trottledOnVideoTimeChange","$ad2bcec7a0192558$var$trottle","pause","percent","valueAsNumber","$ad2bcec7a0192558$var$onVideoTimeSelect","$ad2bcec7a0192558$var$selectVideoTime","$ad2bcec7a0192558$var$selectVideoTimeSide","selectMinutes","colon","indexOf","length","setSelectionRange","selStart","selectionStart","$ad2bcec7a0192558$var$clampVideoTime","selEnd","selectionEnd","mm","split","map","parseFloat","clamped","$ad2bcec7a0192558$var$clamp","min","max","$ad2bcec7a0192558$var$fixVideoTime","test","isValidStart","isValidEnd","start","activeElement","$ad2bcec7a0192558$var$numbers","includes","key","$ad2bcec7a0192558$var$arrows","minutesSelected","mmMax","ssMax","$ad2bcec7a0192558$var$trottledOnVideoTimeInputChange","fn","ms","timeout","clearTimeout","setTimeout","$ad2bcec7a0192558$var$onThumbnailGenerated","blob","url","href","width","videoWidth","height","videoHeight","drawImage","toBlob"],"version":3,"file":"index.1d3d8d8c.js.map"}